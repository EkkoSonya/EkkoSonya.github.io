"use strict";(self.webpackChunklearn_data=self.webpackChunklearn_data||[]).push([[7398],{3671:(n,a)=>{a.A=(n,a)=>{const s=n.__vccOpts||n;for(const[n,t]of a)s[n]=t;return s}},1236:(n,a,s)=>{s.r(a),s.d(a,{comp:()=>o,data:()=>c});var t=s(7847);const e=[(0,t.Fv)('<p>带初始值的初始化</p><ul><li><p>如果是 <code>java 9+</code>, 可以直接使用 <code>list.of</code></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>\n  <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">&quot;aaa&quot;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">&quot;bbb&quot;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">&quot;ccc&quot;</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种方式创建的列表 不可修改，<code>add()</code> 和 <code>remove()</code> 都会抛出 <code>UnsupportedOperationException</code>。</p></li><li><p>但如果是 <code>java 8</code>，就没有这个，可以使用 <code>Stream</code></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">&gt;</span></span> list1 <span class="token operator">=</span> <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>\n      <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">&quot;Alice&quot;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">&quot;Bob&quot;</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">&quot;Charlie&quot;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span>\n  <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><table><thead><tr><th>特性</th><th><code>List.of(...)</code></th><th><code>Stream.of(...).collect(Collectors.toList())</code></th></tr></thead><tbody><tr><td>Java 版本要求</td><td>Java 9 及以上</td><td>Java 8 及以上</td></tr><tr><td>是否可变</td><td>❌ 不可变（immutable）</td><td>✅ 可变（mutable）</td></tr><tr><td>是否支持增删元素</td><td>❌ 抛出 <code>UnsupportedOperationException</code></td><td>✅ 支持 <code>.add()</code> / <code>.remove()</code> 等操作</td></tr><tr><td>是否允许包含 <code>null</code></td><td>❌ 不允许，包含会抛出 <code>NullPointerException</code></td><td>✅ 允许包含 <code>null</code></td></tr><tr><td>是否简洁</td><td>✅ 更简洁</td><td>较繁琐，但功能灵活</td></tr><tr><td>实际返回的 List 类型</td><td>通常为 <code>ImmutableCollections.ListN</code></td><td>通常为 <code>ArrayList</code></td></tr></tbody></table>',3)],p={},o=(0,s(3671).A)(p,[["render",function(n,a){return(0,t.uX)(),(0,t.CE)("div",null,e)}]]),c=JSON.parse('{"path":"/code/java_hint/hint1.html","title":"hint - List初始化","lang":"zh-CN","frontmatter":{"title":"hint - List初始化","date":"2025-06-16T00:00:00.000Z","category":["code"],"tag":["java hint"],"order":-0.7482,"description":"带初始值的初始化 如果是 java 9+, 可以直接使用 list.of 这种方式创建的列表 不可修改，add() 和 remove() 都会抛出 UnsupportedOperationException。 但如果是 java 8，就没有这个，可以使用 Stream ","head":[["meta",{"property":"og:url","content":"http://ekkosonya.cn/code/java_hint/hint1.html"}],["meta",{"property":"og:site_name","content":"EkkoSonya\'s Blog"}],["meta",{"property":"og:title","content":"hint - List初始化"}],["meta",{"property":"og:description","content":"带初始值的初始化 如果是 java 9+, 可以直接使用 list.of 这种方式创建的列表 不可修改，add() 和 remove() 都会抛出 UnsupportedOperationException。 但如果是 java 8，就没有这个，可以使用 Stream "}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-17T10:08:47.000Z"}],["meta",{"property":"article:author","content":"EkkoSonya"}],["meta",{"property":"article:tag","content":"java hint"}],["meta",{"property":"article:published_time","content":"2025-06-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-17T10:08:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"hint - List初始化\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-06-16T00:00:00.000Z\\",\\"dateModified\\":\\"2025-06-17T10:08:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"EkkoSonya\\",\\"url\\":\\"http://ekkosonya.cn\\"}]}"]]},"headers":[],"git":{"createdTime":1750154927000,"updatedTime":1750154927000,"contributors":[{"name":"EkkoSonya","email":"ekkosonya@163.com","commits":1}]},"readingTime":{"minutes":0.76,"words":227},"filePathRelative":"code/java_hint/hint1.md","localizedDate":"2025年6月16日","excerpt":"<p>带初始值的初始化</p>\\n<ul>\\n<li>\\n<p>如果是 <code>java 9+</code>, 可以直接使用 <code>list.of</code></p>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">&gt;</span></span> list <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">List</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">of</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"a\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"b\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"c\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div><div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">&gt;</span></span> list <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">List</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">of</span><span class=\\"token punctuation\\">(</span>\\n  <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Student</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"aaa\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Student</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"bbb\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Student</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"ccc\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div><p>这种方式创建的列表 不可修改，<code>add()</code> 和 <code>remove()</code> 都会抛出 <code>UnsupportedOperationException</code>。</p>\\n</li>\\n<li>\\n<p>但如果是 <code>java 8</code>，就没有这个，可以使用 <code>Stream</code></p>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code>  <span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">Student</span><span class=\\"token punctuation\\">&gt;</span></span> list1 <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">Stream</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">of</span><span class=\\"token punctuation\\">(</span>\\n      <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Student</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Alice\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">20</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Student</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Bob\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">21</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Student</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Charlie\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">22</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">collect</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Collectors</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toList</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div></li>\\n</ul>","autoDesc":true}')}}]);