"use strict";(self.webpackChunklearn_data=self.webpackChunklearn_data||[]).push([[3524],{2798:(s,a,n)=>{n.d(a,{l:()=>t});const t={category:{"/":{path:"/category/",map:{daily:{path:"/category/daily/",indexes:[0]},academic:{path:"/category/academic/",indexes:[1,2,3,4,5,6,7,8,9,10,11]},code:{path:"/category/code/",indexes:[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35]}}}},tag:{"/":{path:"/tag/",map:{d1:{path:"/tag/d1/",indexes:[0]},UAV:{path:"/tag/uav/",indexes:[11]},"IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY":{path:"/tag/ieee-transactions-on-vehicular-technology/",indexes:[11]},强化学习:{path:"/tag/强化学习/",indexes:[1,2,3,4,5,6,7,8,9,10]},java:{path:"/tag/java/",indexes:[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35]}}}}}},8589:(s,a,n)=>{n.d(a,{M:()=>t});const t=["/daily/d1.html","/academic/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/chapter%2010.html","/academic/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/chapter%209.html","/academic/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/chapter%208.html","/academic/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/chapter%207.html","/academic/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/chapter%206.html","/academic/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/chapter%205.html","/academic/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/chapter%204.html","/academic/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/chapter%203.html","/academic/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/chapter%202.html","/academic/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/chapter%201.html","/academic/UAV/Reinforcement-Learning-in-Multiple-UAV-Networks_Deployment-and-Movement-Design.html","/code/java/java%2023.html","/code/java/java%2024.html","/code/java/java%2021.html","/code/java/java%2022.html","/code/java/java%2019.html","/code/java/java%2020.html","/code/java/java%2018.html","/code/java/java%2014.html","/code/java/java%2015.html","/code/java/java%2016.html","/code/java/java%2017.html","/code/java/java%2012.html","/code/java/java%2013.html","/code/java/java%2011.html","/code/java/java%2010.html","/code/java/java%209.html","/code/java/java%208.html","/code/java/java%207.html","/code/java/java%206.html","/code/java/java%205.html","/code/java/java%204.html","/code/java/java%203.html","/code/java/java%201.html","/code/java/java%202.html"]},594:(s,a,n)=>{n.d(a,{U:()=>t});const t={article:{"/":{path:"/article/",indexes:[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,1,2,3,4,34,35,5,6,7,8,9,10,11,0]}},star:{"/":{path:"/star/",indexes:[]}},timeline:{"/":{path:"/timeline/",indexes:[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,1,2,3,4,34,35,5,6,7,8,9,10,11,0]}}}},3130:(s,a,n)=>{n.d(a,{B:()=>S});var t=n(3151),p=n(8981),e=n(5670),l=n(4722),m=n(2831),i=n(255),c=n(8939);const o=(0,t.re)({enhance:({app:s})=>{(0,p.L4)("FontIcon")||s.component("FontIcon",l.A),(0,p.L4)("Badge")||s.component("Badge",m.A),(0,p.L4)("BiliBili")||s.component("BiliBili",i.A),(0,p.L4)("VidStack")||s.component("VidStack",c.A)},setup:()=>{(0,e.vCw)('  @import url("https://at.alicdn.com/t/c/font_2410206_5vb9zlyghj.css");\n  ')},rootComponents:[]});var r=n(4102),h=n(337),g=n(5212),u=n(9090),d=n(4654),v=n(9350),y=n(1735),k=n(7994),b=n(3418);const w=(0,t.re)({enhance:({app:s})=>{},setup:()=>{(0,b.n)()}});var x=n(2457),z=n(4810),f=n(2462),j=n(4232),A=n(7847),E=n(9837);(0,j.M_)((s=>{const a=s.t,n=!1!==s.I,t=s.i;return n?{title:a,content:t?()=>[(0,A.h)(f.GB,{icon:t}),a]:null,order:s.O,index:s.I}:null}));const M=(0,t.re)({enhance:({app:s,router:a})=>{const{scrollBehavior:n}=a.options;a.options.scrollBehavior=async(...s)=>(await(0,f.MK)().wait(),n(...s)),(0,f.fk)(s),s.component("HopeIcon",f.GB),s.component("BloggerInfo",E.tI)},setup:()=>{(0,f.PV)(),(0,f.i$)(),(0,E.su)()},layouts:{Layout:f.PE,NotFound:f.Mk,BlogCategory:E.Pn,BlogHome:E.qX,BlogType:E.z7,Timeline:E.Kf}}),S=[{},o,r.A,h.A,g.A,u.A,d.A,v.A,y.A,k.A,w,x.A,z.A,M]},6159:(s,a,n)=>{n.d(a,{J:()=>p,c:()=>t});const t=JSON.parse("{}"),p=Object.fromEntries([["/",{loader:()=>n.e(4470).then(n.bind(n,6128)),meta:{y:"h",t:"",i:"home"}}],["/intro.html",{loader:()=>n.e(3912).then(n.bind(n,2834)),meta:{y:"p",t:"个人介绍",i:"any"}}],["/daily/d1.html",{loader:()=>n.e(6007).then(n.bind(n,9256)),meta:{d:171288e7,l:"2024年4月12日",c:["daily"],g:["d1"],e:'<p><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>+</mo><mi>b</mi><mo>=</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">a+b=c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span></p>',r:{minutes:.05,words:15},y:"a",t:"daily1",O:-.5}}],["/academic/UAV/Reinforcement-Learning-in-Multiple-UAV-Networks_Deployment-and-Movement-Design.html",{loader:()=>n.e(4261).then(n.bind(n,804)),meta:{d:17129664e5,l:"2024年4月13日",c:["academic"],g:["UAV","IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY"],e:"<p>2019 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY</p>\n<h2>主要动机</h2>\n<ul>\n<li>A novel framework is proposed for quality of experience driven deployment and dynamic movement of multiple unmanned aerial vehicles (UAVs).</li>\n<li>过去研究大多没有基于用户的移动(movement of users)来考虑无人机的机动性，更多地是考虑多架无人机的二维部署或单架无人机在地面用户保持静止情况下的部署。</li>\n<li>考虑QoE, 而不是仅考虑吞吐量(throughput)，即需要考虑地面不同用户的具体需求。(QoE is invoked for demonstrating the users’ satisfaction, and it is supposed to be considered in UAV-assisted wireless networks)</li>\n<li>该文设计的是3D部署，过去研究主要考虑的是2D部署。</li>\n</ul>",r:{minutes:12.1,words:3630},y:"a",t:"Reinforcement Learning in Multiple-UAV Networks:Deployment and Movement Design",O:-.5}}],["/academic/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/chapter%201.html",{loader:()=>n.e(44).then(n.bind(n,783)),meta:{d:17229024e5,l:"2024年8月6日",c:["academic"],g:["强化学习"],e:'<h2>强化学习框架图</h2>\n<figure><img src="http://myimg.ekkosonya.cn/20240807111059.png" alt="主要框架" tabindex="0" loading="lazy"><figcaption>主要框架</figcaption></figure>\n<h2>1. 基本概念</h2>\n<ul>\n<li>\n<p><strong>State(状态)</strong>：The status of the agent with respect to the environment.</p>\n</li>\n<li>\n<p><strong>State Space(状态空间)</strong>: 所有状态的集合。<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><mo stretchy="false">{</mo><msub><mi>s</mi><mi>i</mi></msub><msubsup><mo stretchy="false">}</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup></mrow><annotation encoding="application/x-tex">S=\\{s_i\\}_{i=1}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0087em;vertical-align:-0.2587em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span>。</p>\n</li>\n<li>\n<p><strong>Action(动作)</strong>: 对于每一个状态，都有可选择的动作。</p>\n</li>\n<li>\n<p><strong>Action space of a state</strong>: 对应状态中所有可选择的动作集合。<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo stretchy="false">(</mo><msub><mi>s</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mi>i</mi></msub><msubsup><mo stretchy="false">}</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup></mrow><annotation encoding="application/x-tex">A(s_i)=\\{a_i\\}_{i=1}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0087em;vertical-align:-0.2587em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span></p>\n</li>\n<li>\n<p><strong>State transition(状态转换)</strong>: <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mn>1</mn></msub><mo><mover><mo><mo>→</mo></mo><msub><mi>a</mi><mn>1</mn></msub></mover></mo><msub><mi>s</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">s_1\\overset{a_1}{\\rightarrow} s_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1294em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9794em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">→</span></span></span><span style="top:-3.578em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。定义了agent与环境的交互行为。</p>\n</li>\n<li>\n<p><strong>State transition probability</strong>: <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>s</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>s</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(s_2|s_1,a_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，即状态<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">s_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>采用动作<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">a_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>转到状态<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">s_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的概率。</p>\n</li>\n<li>\n<p><strong>Policy <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi></mrow><annotation encoding="application/x-tex">\\pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span></span></strong>: 指导agent在当前状态下选择哪个动作。</p>\n</li>\n<li>\n<p><strong>Reward(奖励)</strong>: 在执行一个动作后获得的一个常数(依赖于当前状态和所采取的动作)。同样可以用条件概率的形式进行描述，如<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>r</mi><mo>=</mo><mn>1</mn><mi mathvariant="normal">∣</mi><msub><mi>s</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(r=1|s_1,a_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1∣</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，即在状态<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">s_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>下采用动作<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">a_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>获得的奖励<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">r=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>的概率。</p>\n</li>\n<li>\n<p><strong>Trajectory</strong>：a state-action-reward chain.(可以有限，也可以是无限长的trajectory)\n<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mn>1</mn></msub><mi><mover><mo><mo><munder><mo><mo>→</mo></mo><mrow><mi>r</mi><mo>=</mo><mn>0</mn></mrow></munder></mo></mo><msub><mi>a</mi><mn>2</mn></msub></mover></mi><msub><mi>s</mi><mn>2</mn></msub><mi><mover><mo><mo><munder><mo><mo>→</mo></mo><mrow><mi>r</mi><mo>=</mo><mn>0</mn></mrow></munder></mo></mo><msub><mi>a</mi><mn>2</mn></msub></mover></mi><msub><mi>s</mi><mn>5</mn></msub><mi><mover><mo><mo><munder><mo><mo>→</mo></mo><mrow><mi>r</mi><mo>=</mo><mn>0</mn></mrow></munder></mo></mo><msub><mi>a</mi><mn>2</mn></msub></mover></mi><msub><mi>s</mi><mn>8</mn></msub><mi><mover><mo><mo><munder><mo><mo>→</mo></mo><mrow><mi>r</mi><mo>=</mo><mn>1</mn></mrow></munder></mo></mo><msub><mi>a</mi><mn>2</mn></msub></mover></mi><msub><mi>s</mi><mn>9</mn></msub></mrow><annotation encoding="application/x-tex">s_1\\overset{a_2}{\\underset{r=0}{\\rightarrow}}s_2\\overset{a_2}{\\underset{r=0}{\\rightarrow}}s_5\\overset{a_2}{\\underset{r=0}{\\rightarrow}}s_8\\overset{a_2}{\\underset{r=1}{\\rightarrow}}s_9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.6965em;vertical-align:-0.7171em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9794em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3669em;"><span style="top:-2.3829em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">→</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.578em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9794em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3669em;"><span style="top:-2.3829em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">→</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.578em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9794em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3669em;"><span style="top:-2.3829em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">→</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.578em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9794em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3669em;"><span style="top:-2.3829em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">→</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.578em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>.<br>\n个人理解，trajectory是在策略给定下，agent可能走出的全部轨迹，并非只是一个单一的轨迹。</p>\n</li>\n<li>\n<p><strong>Return of a trajectory</strong>：将对应的轨迹所获得的所有reward的总和，可以粗步衡量一个策略的好坏。</p>\n</li>\n<li>\n<p><strong>Discounted return(of a trajectory)</strong>：为了应对具有无限步的trajectory的<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>e</mi><mi>t</mi><mi>u</mi><mi>r</mi><mi>n</mi><mo>=</mo><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">return=\\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">re</span><span class="mord mathnormal">t</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord">∞</span></span></span></span>的情况。\n<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mn>1</mn></msub><mi><mover><mo><mo><munder><mo><mo>→</mo></mo><mrow><mi>r</mi><mo>=</mo><mn>0</mn></mrow></munder></mo></mo><msub><mi>a</mi><mn>2</mn></msub></mover></mi><msub><mi>s</mi><mn>2</mn></msub><mi><mover><mo><mo><munder><mo><mo>→</mo></mo><mrow><mi>r</mi><mo>=</mo><mn>0</mn></mrow></munder></mo></mo><msub><mi>a</mi><mn>2</mn></msub></mover></mi><msub><mi>s</mi><mn>5</mn></msub><mi><mover><mo><mo><munder><mo><mo>→</mo></mo><mrow><mi>r</mi><mo>=</mo><mn>0</mn></mrow></munder></mo></mo><msub><mi>a</mi><mn>2</mn></msub></mover></mi><msub><mi>s</mi><mn>8</mn></msub><mi><mover><mo><mo><munder><mo><mo>→</mo></mo><mrow><mi>r</mi><mo>=</mo><mn>1</mn></mrow></munder></mo></mo><msub><mi>a</mi><mn>2</mn></msub></mover></mi><msub><mi>s</mi><mn>9</mn></msub><mstyle mathcolor="blue"><mrow><mi><mover><mo><mo><munder><mo><mo>→</mo></mo><mrow><mi>r</mi><mo>=</mo><mn>1</mn></mrow></munder></mo></mo><msub><mi>a</mi><mn>2</mn></msub></mover></mi><msub><mi>s</mi><mn>9</mn></msub><mi><mover><mo><mo><munder><mo><mo>→</mo></mo><mrow><mi>r</mi><mo>=</mo><mn>1</mn></mrow></munder></mo></mo><msub><mi>a</mi><mn>2</mn></msub></mover></mi><msub><mi>s</mi><mn>9</mn></msub><mo>…</mo></mrow></mstyle></mrow><annotation encoding="application/x-tex">s_1\\overset{a_2}{\\underset{r=0}{\\rightarrow}}s_2\\overset{a_2}{\\underset{r=0}{\\rightarrow}}s_5\\overset{a_2}{\\underset{r=0}{\\rightarrow}}s_8\\overset{a_2}{\\underset{r=1}{\\rightarrow}}s_9\\color{blue}{\\overset{a_2}{\\underset{r=1}{\\rightarrow}}s_9\\overset{a_2}{\\underset{r=1}{\\rightarrow}}s_9\\dots}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.6965em;vertical-align:-0.7171em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9794em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3669em;"><span style="top:-2.3829em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">→</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.578em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9794em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3669em;"><span style="top:-2.3829em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">→</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.578em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9794em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3669em;"><span style="top:-2.3829em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">→</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.578em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9794em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3669em;"><span style="top:-2.3829em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">→</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.578em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord" style="color:blue;"><span class="mord" style="color:blue;"><span class="mop op-limits" style="color:blue;"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9794em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop" style="color:blue;"><span class="mrel" style="color:blue;"><span class="mop op-limits" style="color:blue;"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3669em;"><span style="top:-2.3829em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight" style="color:blue;"><span class="mord mtight" style="color:blue;"><span class="mord mathnormal mtight" style="margin-right:0.02778em;color:blue;">r</span><span class="mrel mtight" style="color:blue;">=</span><span class="mord mtight" style="color:blue;">1</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop" style="color:blue;">→</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.578em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight" style="color:blue;"><span class="mord mtight" style="color:blue;"><span class="mord mtight" style="color:blue;"><span class="mord mathnormal mtight" style="color:blue;">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight" style="color:blue;"><span class="mord mtight" style="color:blue;">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171em;"><span></span></span></span></span></span></span><span class="mord" style="color:blue;"><span class="mord mathnormal" style="color:blue;">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:blue;"><span class="mord mtight" style="color:blue;">9</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord" style="color:blue;"><span class="mop op-limits" style="color:blue;"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9794em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop" style="color:blue;"><span class="mrel" style="color:blue;"><span class="mop op-limits" style="color:blue;"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3669em;"><span style="top:-2.3829em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight" style="color:blue;"><span class="mord mtight" style="color:blue;"><span class="mord mathnormal mtight" style="margin-right:0.02778em;color:blue;">r</span><span class="mrel mtight" style="color:blue;">=</span><span class="mord mtight" style="color:blue;">1</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop" style="color:blue;">→</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.578em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight" style="color:blue;"><span class="mord mtight" style="color:blue;"><span class="mord mtight" style="color:blue;"><span class="mord mathnormal mtight" style="color:blue;">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight" style="color:blue;"><span class="mord mtight" style="color:blue;">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171em;"><span></span></span></span></span></span></span><span class="mord" style="color:blue;"><span class="mord mathnormal" style="color:blue;">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:blue;"><span class="mord mtight" style="color:blue;">9</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="color:blue;margin-right:0.1667em;"></span><span class="minner" style="color:blue;">…</span></span></span></span></span>. 此时该trajectory的<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>e</mi><mi>t</mi><mi>u</mi><mi>r</mi><mi>n</mi><mo>=</mo><mn>0</mn><mo>+</mo><mn>0</mn><mo>+</mo><mn>0</mn><mo>+</mo><mn>1</mn><mo>+</mo><mn>1</mn><mo>+</mo><mo>⋯</mo><mo>=</mo><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">return=0+0+0+1+1+\\dots=\\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">re</span><span class="mord mathnormal">t</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord">∞</span></span></span></span>。\n引入<strong>discount rate</strong>, <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\\gamma\\in[0,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>.\n此时对应的<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>i</mi><mi>s</mi><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>d</mi><mtext>&nbsp;</mtext><mi>r</mi><mi>a</mi><mi>t</mi><mi>e</mi><mo>=</mo><mn>0</mn><mo>+</mo><mi>γ</mi><mn>0</mn><mo>+</mo><msup><mi>γ</mi><mn>2</mn></msup><mn>0</mn><mo>+</mo><msup><mi>γ</mi><mn>3</mn></msup><mn>1</mn><mo>+</mo><msup><mi>γ</mi><mn>4</mn></msup><mn>1</mn><mo>+</mo><mo>⋯</mo><mo>=</mo><msup><mi>γ</mi><mn>3</mn></msup><mfrac><mn>1</mn><mrow><mn>1</mn><mo>−</mo><mi>γ</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">discounted\\space rate=0+\\gamma 0+\\gamma^2 0+\\gamma^3 1+\\gamma^4 1+\\dots=\\gamma^3 \\frac{1}{1-\\gamma}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">sco</span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">d</span><span class="mspace">&nbsp;</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3262em;vertical-align:-0.4811em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>\n显然，如果<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span></span></span></span>接近0，即此时的discounted return越短视，注重近期的reward；<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span></span></span></span>接近1，更远视，更注重长远的reward。</p>\n</li>\n<li>\n<p><strong>Episode(trial)</strong>：When interacting with the environment following a policy, the agent may stop at <strong>some terminal states</strong>. The resulting trajectory is called an episode(or a trial)/\n即表示具有终止状态<strong>terminal states</strong>的trajectory，通常是具有有限步长的trajectory.\n同理，这样的任务称为<strong>episodic tasks</strong>。</p>\n</li>\n<li>\n<p><strong>continuing tasks</strong>：即不具备terminal states的任务，会与环境一直交互下去。\n可以通过设置将episodic tasks转换成continuing tasks，如可以在target states中限制action space，控制其一直待在target states中。\nDeterministic — Stochastic</p>\n</li>\n</ul>',r:{minutes:2.8,words:841},y:"a",t:"RL1 - 基本概念",O:-.5}}],["/academic/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/chapter%2010.html",{loader:()=>n.e(1690).then(n.bind(n,8499)),meta:{d:17246304e5,l:"2024年8月26日",c:["academic"],g:["强化学习"],e:'<ul>\n<li>actor: 对应 policy update</li>\n<li>critic: 对应 policy evaluation 或者 value evaluation</li>\n</ul>\n<figure><img src="http://myimg.ekkosonya.cn/20240830184236.png" alt="20240830184236" tabindex="0" loading="lazy"><figcaption>20240830184236</figcaption></figure>\n<p>显然，是在基于 策略梯度上升 算法的基础上，将对于 Q 值的估计通过一个网络来进行描述，这个便成为 critic, 而对应的策略梯度上升算法就是对应 actor。</p>',r:{minutes:1.41,words:424},y:"a",t:"RL10 - Actor-Critic 方法",O:-.5}}],["/academic/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/chapter%202.html",{loader:()=>n.e(7777).then(n.bind(n,7958)),meta:{d:17229888e5,l:"2024年8月7日",c:["academic"],g:["强化学习"],e:'<h2>核心内容</h2>\n<ul>\n<li>state value</li>\n<li>the Bellman equation</li>\n</ul>\n<h2>1.State value</h2>\n<h3>1.1 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">G_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></h3>',r:{minutes:5.33,words:1600},y:"a",t:"RL2 - 贝尔曼公式",O:-.5}}],["/academic/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/chapter%203.html",{loader:()=>n.e(1994).then(n.bind(n,3507)),meta:{d:17230752e5,l:"2024年8月8日",c:["academic"],g:["强化学习"],e:'<ul>\n<li>Core concepts: optimal state value and optimal policy</li>\n<li>A fundamental tool: the Bellman optimality equation (BOE)</li>\n</ul>\n<h2>1. Optimal policy</h2>\n<p>最优策略的定义:<br>\nA policy <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>π</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">\\pi^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span> is optimal if <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>π</mi><mo>∗</mo></msup><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>≥</mo><msub><mi>v</mi><mi>π</mi></msub><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\\pi^*(s)\\ge v_\\pi(s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span> for all s and for any other policy <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi></mrow><annotation encoding="application/x-tex">\\pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span></span>.<br>\n需要确定几件事:</p>',r:{minutes:2.08,words:624},y:"a",t:"RL3 - 贝尔曼最优公式",O:-.5}}],["/academic/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/chapter%204.html",{loader:()=>n.e(855).then(n.bind(n,3722)),meta:{d:17231616e5,l:"2024年8月9日",c:["academic"],g:["强化学习"],e:'<p>贝尔曼最优公式:</p>\n<p v-pre="" class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>v</mi><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mi>π</mi></munder><mo stretchy="false">(</mo><msub><mi>r</mi><mi>π</mi></msub><mo>+</mo><mi>γ</mi><msub><mi>P</mi><mi>π</mi></msub><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\nv=f(v)=\\max_{\\pi}(r_\\pi+\\gamma P_\\pi v)\n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.45em;vertical-align:-0.7em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span></span></p>',r:{minutes:4.66,words:1397},y:"a",t:"RL4 - 值迭代和策略迭代(动态规划)",O:-.5}}],["/academic/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/chapter%205.html",{loader:()=>n.e(1408).then(n.bind(n,3484)),meta:{d:17233344e5,l:"2024年8月11日",c:["academic"],g:["强化学习"],e:'<ul>\n<li>\n<p>如何在没有模型 (即<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>r</mi><mi mathvariant="normal">∣</mi><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>p</mi><mo stretchy="false">(</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(r|s,a),p(s\'|s,a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord">∣</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span>等均未知) 的情况下进行估计\n通过 Monte Carlo estimation.<br>\n其核心思想是：<br>\n若有一系列(<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi mathvariant="normal">.</mi><mi>i</mi><mi mathvariant="normal">.</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">i.i.d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">i</span><span class="mord">.</span><span class="mord mathnormal">i</span><span class="mord">.</span><span class="mord mathnormal">d</span></span></span></span>)样本采样，得到一个样本序列<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">{x_1,x_2,\\dots,x_N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><br>\n那么对于随机变量<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>的估计可以为：</p>\n<p v-pre="" class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mo stretchy="false">[</mo><mi>x</mi><mo stretchy="false">]</mo><mo>≈</mo><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>x</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">\nE[x]\\approx \\bar{x} = \\frac{1}{N}\\sum_{j=1}^Nx_j\n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5678em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2421em;vertical-align:-1.4138em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>该方法成立的数学依据是 <strong>大数定理 (Law of Large Numbers)</strong><br>\n<img src="http://myimg.ekkosonya.cn/20240811225952.png" alt="20240811225952" loading="lazy"><br>\n<strong>样本必须是独立同分布(iid, independent and identically distributed)</strong></p>\n</li>\n<li>\n<p>为什么考虑 mean estimation.\n因为无论是 state value 还是 action value 其原始定义都是从<strong>期望</strong>出发的。</p>\n<p v-pre="" class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>v</mi><mi>π</mi></msub><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">[</mo><msub><mi>G</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>S</mi><mi>t</mi></msub><mo>=</mo><mi>s</mi><mo stretchy="false">]</mo><mo separator="true">;</mo><mspace width="1em"></mspace><msub><mi>q</mi><mi>π</mi></msub><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">[</mo><msub><mi>G</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>S</mi><mi>t</mi></msub><mo>=</mo><mi>s</mi><mo separator="true">,</mo><msub><mi>A</mi><mi>t</mi></msub><mo>=</mo><mi>a</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\n  v_\\pi(s)=E[G_t|S_t=s]; \\quad\n  q_\\pi(s,a)=E[G_t|S_t=s,A_t=a]\n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mclose">]</span><span class="mpunct">;</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mclose">]</span></span></span></span></span></p>\n</li>\n</ul>',r:{minutes:5.94,words:1781},y:"a",t:"RL5 - 蒙特卡洛方法 (Monte Carlo) model-free",O:-.5}}],["/academic/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/chapter%206.html",{loader:()=>n.e(3173).then(n.bind(n,2553)),meta:{d:17235072e5,l:"2024年8月13日",c:["academic"],g:["强化学习"],e:"<ul>\n<li>\n<p>针对 mean estimation 问题进行研究，因为在 RL 中 无论是 state value 还是 action value 其定义都是一个均值 (means)</p>\n</li>\n<li>\n<p>Stochastic approximation(SA): SA refers to a broad class of <strong>stochastic iterative</strong> algorithms <strong>soloving root finding</strong> or <strong>optimization problems</strong>.</p>\n</li>\n</ul>",r:{minutes:5.16,words:1548},y:"a",t:"RL6 - 随机近似理论与随机梯度下降算法",O:-.5}}],["/academic/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/chapter%207.html",{loader:()=>n.e(9774).then(n.bind(n,2801)),meta:{d:172368e7,l:"2024年8月15日",c:["academic"],g:["强化学习"],e:'<h2>1. 引入</h2>\n<p>考虑一个复杂的均值估计问题: 计算</p>\n<p v-pre="" class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>ω</mi><mo>=</mo><mi mathvariant="double-struck">E</mi><mo stretchy="false">[</mo><mi>R</mi><mo>+</mo><mi>γ</mi><mi>v</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\n\\omega = \\mathbb{E}[R+\\gamma v(X)],\n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathbb">E</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)]</span><span class="mpunct">,</span></span></span></span></span></p>',r:{minutes:3.81,words:1143},y:"a",t:"RL7 - Temporal-Difference Learning",O:-.5}}],["/academic/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/chapter%208.html",{loader:()=>n.e(2219).then(n.bind(n,8263)),meta:{d:1724112e6,l:"2024年8月20日",c:["academic"],g:["强化学习"],e:'<p>对于 q-value 的估计从 基于表格的 (tabular representation) 转换到 基于函数的 (function representation)</p>\n<h2>1. 引入</h2>\n<ul>\n<li>通过使用一个函数来进行拟合 state values 或者 action values: <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>v</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo><mo>≈</mo><msub><mi>v</mi><mi>π</mi></msub><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\\hat{v}(s,w)\\approx v_\\pi(s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span>， 其中<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mi>m</mi></msup></mrow><annotation encoding="application/x-tex">w\\in \\mathbb{R}^m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6889em;"></span><span class="mord"><span class="mord mathbb">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span></span></span>是参数向量。</li>\n<li>可以提高存储效率</li>\n<li>提高泛化能力</li>\n</ul>',r:{minutes:5.51,words:1653},y:"a",t:"RL8 - 值函数近似(Value Function Approximation)",O:-.5}}],["/academic/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/chapter%209.html",{loader:()=>n.e(6516).then(n.bind(n,9662)),meta:{d:17246304e5,l:"2024年8月26日",c:["academic"],g:["强化学习"],e:'<ul>\n<li>之前介绍的方法都是 value-based 的方法，从这章开始时基于 policy-based 的方法。</li>\n<li>policy function approximation 是直接建立一个基于策略的目标函数来进行梯度上升的优化。</li>\n</ul>\n<h2>1. 基本思路</h2>\n<p>将基于<strong>表格</strong>表示的策略 转换为 基于<strong>函数</strong>表示的策略。<br>\n即此时策略 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi></mrow><annotation encoding="application/x-tex">\\pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span></span> 可以描述为：</p>',r:{minutes:4.28,words:1285},y:"a",t:"RL9 - 策略梯度法(Policy gradient)",O:-.5}}],["/code/java/java%201.html",{loader:()=>n.e(8235).then(n.bind(n,3413)),meta:{d:172368e7,l:"2024年8月15日",c:["code"],g:["java"],e:'<h2>类与对象</h2>\n<p><strong>类</strong>: 是对一类事物的描述，是抽象的、概念上的定义.<br>\n<strong>对象</strong>: 是某一类事物实际存在的每个个体，因而也被称为实例（instance）， 是类的一个具体化个体.</p>\n<p>类的创建:<br>\n类名的首字母通常是大写的.</p>\n<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span><span class="token comment">//这里定义的人类具有三个属性，名字、年龄、性别</span>\n    <span class="token class-name">String</span> name<span class="token punctuation">;</span>   <span class="token comment">//直接在类中定义变量，表示类具有的属性</span>\n    <span class="token keyword">int</span> age<span class="token punctuation">;</span>\n    <span class="token class-name">String</span> sex<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',r:{minutes:6.59,words:1978},y:"a",t:"Java - 类与对象1",O:-1}}],["/code/java/java%2010.html",{loader:()=>n.e(1199).then(n.bind(n,6971)),meta:{d:17308512e5,l:"2024年11月6日",c:["code"],g:["java"],e:'<h2>泛型 2</h2>\n<h3>泛型方法</h3>\n<p>当然，类型变量并不是只能在泛型类中才可以使用，我们也可以定义泛型方法。</p>\n<p>当某个方法（无论是静态方法还是成员方法）需要<strong>接受的参数类型并不确定</strong>时，我们也可以使用泛型来表示：</p>\n<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">"Hello World!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">T</span> t<span class="token punctuation">)</span><span class="token punctuation">{</span>   \n      <span class="token comment">//在返回值类型前添加&lt;&gt;并填写泛型变量表示这个是一个泛型方法</span>\n        <span class="token keyword">return</span> t<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',r:{minutes:5.25,words:1574},y:"a",t:"Java - 泛型 2",O:-.91}}],["/code/java/java%2011.html",{loader:()=>n.e(8184).then(n.bind(n,2591)),meta:{d:17320608e5,l:"2024年11月20日",c:["code"],g:["java"],e:"<h2>集合类 1</h2>\n<h3>集合类</h3>\n<p>集合类是Java中非常重要的存在，使用频率极高。集合其实与我们数学中的集合是差不多的概念，集合表示一组对象，每一个对象我们都可以称其为元素。不同的集合有着不同的性质，比如一些集合允许重复的元素，而另一些则不允许，一些集合是有序的，而其他则是无序的。</p>\n<p>集合类其实就是为了更好地组织、管理和操作我们的数据而存在的，包括列表、集合、队列、映射等数据结构。</p>\n<h4>集合类与数组区别</h4>\n<p>集合跟数组一样，可以表示同样的一组元素，但是他们的相同和不同之处在于：</p>\n<p>相同之处：</p>\n<ul>\n<li>它们都是容器，都能够容纳一组元素。</li>\n</ul>",r:{minutes:11.52,words:3457},y:"a",t:"Java - 集合类 1",O:-.9}}],["/code/java/java%2012.html",{loader:()=>n.e(7021).then(n.bind(n,5791)),meta:{d:17325792e5,l:"2024年11月26日",c:["code"],g:["java"],e:'<h2>集合类 2</h2>\n<h3>迭代器</h3>\n<p>实际上我们的集合类都是支持使用<code>foreach</code>语法 (增强 for 语法) 的：</p>\n<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"A"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> s <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">//集合类同样支持这种语法</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',r:{minutes:5.1,words:1529},y:"a",t:"Java - 集合类 2",O:-.89}}],["/code/java/java%2013.html",{loader:()=>n.e(2278).then(n.bind(n,2445)),meta:{d:17325792e5,l:"2024年11月26日",c:["code"],g:["java"],e:'<h2>集合类 3</h2>\n<h3>Quene 和 Deque</h3>\n<p>其中 <code>LinkedList</code> 除了可以直接当做列表使用之外，还可以当做其他的数据结构使用，可以看到它不仅仅实现了List接口：</p>\n<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span>\n    <span class="token keyword">extends</span> <span class="token class-name">AbstractSequentialList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span>\n    <span class="token keyword">implements</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">Deque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">Cloneable</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span>\n</code></pre></div>',r:{minutes:6.5,words:1949},y:"a",t:"Java - 集合类 3",O:-.88}}],["/code/java/java%2014.html",{loader:()=>n.e(4587).then(n.bind(n,9085)),meta:{d:17329248e5,l:"2024年11月30日",c:["code"],g:["java"],e:"<h2>集合类 4</h2>\n<h3>Map</h3>\n<p>映射指两个元素的之间相互“对应”的关系，也就是说，我们的元素之间是两两对应的，是以键值对的形式存在。</p>\n<p><code>Map</code> 就是为了实现这种数据结构而存在的，我们通过保存键值对的形式来存储映射关系，就可以轻松地通过键找到对应的映射值</p>\n<p><code>Map</code> 并不是 <code>Collection</code> 体系下的接口，而是单独的一个体系，因为操作特殊</p>\n<h4>Map 基本定义</h4>\n<p>在 <code>Map</code> 中，这些映射关系被存储为键值对，<code>Map</code> 接口中定义的操作：</p>",r:{minutes:12.81,words:3843},y:"a",t:"Java - 集合类 4",O:-.88}}],["/code/java/java%2015.html",{loader:()=>n.e(1076).then(n.bind(n,5057)),meta:{d:17329248e5,l:"2024年11月30日",c:["code"],g:["java"],e:"<h2>Stream流</h2>\n<p>Java 8 API添加了一个新的抽象称为 <strong>流Stream</strong>，可以让你以一种声明的方式处理数据。</p>\n<p><code>Stream</code> 使用一种类似用 SQL 语句从数据库查询数据的直观方式来提供一种对 Java 集合运算和表达的高阶抽象。</p>\n<p>Stream API 可以极大提高Java程序员的生产力，让程序员写出高效率、干净、简洁的代码。</p>\n<p>这种风格将要处理的元素集合看作一种流， 流在管道中传输， 并且可以在管道的节点上进行处理， 比如筛选， 排序，聚合等。</p>\n<p>元素流在管道中经过 <strong>中间操作</strong>（intermediate operation）的处理，最后由 <strong>最终操作</strong>(terminal operation)得到前面处理的结果。</p>",r:{minutes:3.53,words:1060},y:"a",t:"Java - Stream流",O:-.87}}],["/code/java/java%2016.html",{loader:()=>n.e(5977).then(n.bind(n,2709)),meta:{d:17329248e5,l:"2024年11月30日",c:["code"],g:["java"],e:'<h2>Collections 工具类</h2>\n<p>我们在前面介绍了Arrays，它是一个用于操作数组的工具类，它给我们提供了大量的工具方法。</p>\n<p>既然数组操作都这么方便了，集合操作能不能也安排点高级的玩法呢？那必须的，JDK为我们准备的 <code>Collocations</code> 类就是专用于集合的工具类</p>\n<h3>最大 | 最小</h3>\n<p>我们想快速求得List中的最大值和最小值：</p>\n<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',r:{minutes:2.82,words:847},y:"a",t:"Java - Collections 工具类",O:-.86}}],["/code/java/java%2017.html",{loader:()=>n.e(3314).then(n.bind(n,7288)),meta:{d:17329248e5,l:"2024年11月30日",c:["code"],g:["java"],e:"<h2>集合类对象相等判定</h2>\n<p><code>Oject</code>类中的 <code>equals</code> 方法比较的是<strong>地址</strong>，所以自己定义的类要自己重写 <code>equals</code> 等方法，否则给你当成 <code>Object</code> 类</p>\n<p><code>equals</code> 方法 和 <code>==</code> 的区别</p>\n<p>集合类中并不是通过 <code>==</code> 进行判断的，都是根据 <code>equals</code> 方法进行判断的</p>\n<p><code>remove</code> 也是根据 <code>equals</code> 进行判断来删除元素</p>",r:{minutes:1.57,words:472},y:"a",t:"Java - 集合类对象相等判定",O:-.85}}],["/code/java/java%2018.html",{loader:()=>n.e(1847).then(n.bind(n,2349)),meta:{d:1737936e6,l:"2025年1月27日",c:["code"],g:["java"],e:"<h2>IO流1</h2>\n<p>一般在<code>java.io</code>中</p>\n<ul>\n<li>\n<p><strong>字节流</strong>：</p>\n<p>处理单位：以字节（8 位）为单位进行读写操作。</p>\n<p>适用场景：适用于处理所有类型的数据，包括文本、图片、音频、视频等二进制数据。</p>\n<p>主要类：InputStream 和 OutputStream 及其子类，如 FileInputStream 和 FileOutputStream。</p>\n<p>编码处理：不涉及字符编码转换，直接处理原始字节数据。</p>\n</li>\n<li>\n<p><strong>字符流</strong>：</p>\n<p>处理单位：以字符（16 位）为单位进行读写操作。</p>\n<p>适用场景：专门用于处理文本数据，如读取和写入文本文件。</p>\n<p>主要类：Reader 和 Writer 及其子类，如 FileReader 和 FileWriter。</p>\n<p>编码处理：自动处理字符编码转换，适用于处理文本文件。</p>\n</li>\n</ul>",r:{minutes:6.38,words:1914},y:"a",t:"Java - IO",O:-.84}}],["/code/java/java%2019.html",{loader:()=>n.e(5376).then(n.bind(n,5494)),meta:{d:17404416e5,l:"2025年2月25日",c:["code"],g:["java"],e:'<h2>IO流2</h2>\n<h3>缓冲流</h3>\n<p>虽然普通的文件流读取文件数据非常便捷，但是每次都需要从外部I/O设备去获取数据，由于<strong>外部I/O设备的速度一般都达不到内存的读取速度</strong>，很有可能造成程序<strong>反应迟钝</strong>，因此性能还不够高，而缓冲流正如其名称一样，它能够提供一个缓冲，**提前将部分内容存入内存（缓冲区）**在下次读取时，如果缓冲区中存在此数据，则无需再去请求外部设备。同理，当向外部设备写入数据时，也是由缓冲区处理，而不是直接向外部设备写入。</p>\n<figure><img src="http://myimg.ekkosonya.cn/20250225181159.png" alt="20250225181159" tabindex="0" loading="lazy"><figcaption>20250225181159</figcaption></figure>',r:{minutes:3.62,words:1086},y:"a",t:"Java - IO",O:-.84}}],["/code/java/java%202.html",{loader:()=>n.e(4370).then(n.bind(n,3257)),meta:{d:172368e7,l:"2024年8月15日",c:["code"],g:["java"],e:"<h2>静态变量和静态方法</h2>\n<p><strong>Static</strong><br>\n静态的内容，我们可以理解为是属于这个类的，也可以理解为是所有对象共享的内容。<br>\n我们通过使用 <strong>static 关键字</strong>来声明一个变量或一个方法为<strong>静态的</strong>，一旦被声明为静态，那么通过这个类创建的所有对象，<strong>操作的都是同一个目标</strong>，也就是说，对象再多，也只<strong>有这一个静态的变量或方法</strong>。<br>\n一个对象改变了静态变量的值，那么其他的对象读取的就是被改变的值。</p>\n<p>一般情况下，我们并不会通过一个具体的对象去修改和使用静态属性，而是通过这个类去使用：</p>",r:{minutes:5.81,words:1742},y:"a",t:"Java - 类与对象2",O:-.99}}],["/code/java/java%2020.html",{loader:()=>n.e(9676).then(n.bind(n,7840)),meta:{d:17404416e5,l:"2025年2月25日",c:["code"],g:["java"],e:'<h2>IO流3</h2>\n<h3>转换流</h3>\n<p>有时会遇到这样一个很麻烦的问题：我这里读取的是一个字符串或是一个个字符，但是我只能往一个<code>OutputStream</code>里输出，但是<code>OutputStream</code>又只支持<code>byte类型</code>，如果要往里面写入内容，进行数据转换就会很麻烦</p>\n<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">OutputStreamWriter</span> writer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OutputStreamWriter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">"test.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  \n        <span class="token comment">//虽然给定的是FileOutputStream，但是现在支持以Writer的方式进行写入</span>\n        writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"lbwnb"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//以操作Writer的样子写入OutputStream</span>\n    <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',r:{minutes:4.29,words:1286},y:"a",t:"Java - IO",O:-.83}}],["/code/java/java%2021.html",{loader:()=>n.e(2211).then(n.bind(n,5927)),meta:{d:1740528e6,l:"2025年2月26日",c:["code"],g:["java"],e:'<h2>多线程</h2>\n<h3>进程与线程概念</h3>\n<p><strong>进程</strong>是程序执行的实体，每一个进程都是一个应用程序（比如我们运行QQ、浏览器、LOL、网易云音乐等软件），都有自己的内存空间，<strong>CPU一个核心同时只能处理一件事情</strong>，当出现多个进程需要同时运行时，CPU一般通过<strong>时间片轮转调度算法</strong>，来实现多个进程的同时运行。</p>\n<figure><img src="http://myimg.ekkosonya.cn/20250226173747.png" alt="20250226173747" tabindex="0" loading="lazy"><figcaption>20250226173747</figcaption></figure>',r:{minutes:7.72,words:2317},y:"a",t:"Java - 多线程与反射",O:-.82}}],["/code/java/java%2022.html",{loader:()=>n.e(4650).then(n.bind(n,2519)),meta:{d:1740528e6,l:"2025年2月26日",c:["code"],g:["java"],e:'<h2>多线程2</h2>\n<h3>线程锁和线程同步</h3>\n<h4>多线程下java内存管理</h4>\n<figure><img src="http://myimg.ekkosonya.cn/20250226223324.png" alt="20250226223324" tabindex="0" loading="lazy"><figcaption>20250226223324</figcaption></figure>\n<p>线程之间的共享变量（比如之前悬念中的value变量）存储在主内存（main memory）中，每个线程都有一个私有的工作内存（本地内存），工作内存中存储了该线程以读/写共享变量的副本。</p>',r:{minutes:5.79,words:1737},y:"a",t:"Java - 多线程与反射",O:-.81}}],["/code/java/java%2023.html",{loader:()=>n.e(6657).then(n.bind(n,5227)),meta:{d:17414784e5,l:"2025年3月9日",c:["code"],g:["java"],e:"<h2>多线程3</h2>\n<h3><code>wait</code> 和 <code>notify</code> 方法</h3>\n<p><code>Object</code> 类还有三个方法我们从来没有使用过，分别是<code>wait()</code>、<code>notify()</code>以及<code>notifyAll()</code></p>\n<p>他们其实是需要配合<code>synchronized</code>来使用的，平常环境下是无法使用的，只有当对象作为锁时，才能用这三个方法。</p>\n<p>实际上<strong>锁就是依附于对象存在</strong>的，<strong>每个对象都应该有针对于锁的一些操作</strong>，所以说就这样设计了。</p>",r:{minutes:5.15,words:1546},y:"a",t:"Java - 多线程与反射",O:-.8}}],["/code/java/java%2024.html",{loader:()=>n.e(3168).then(n.bind(n,3216)),meta:{d:17414784e5,l:"2025年3月9日",c:["code"],g:["java"],e:'<h2>多线程4</h2>\n<h3>守护线程</h3>\n<p><code>t.setDaemon(true);</code></p>\n<ul>\n<li>守护进程在后台运行运行，不需要和用户交互，本质和普通进程类似。</li>\n<li>而守护线程就不一样了，当其他所有的非守护线程结束之后，守护线程自动结束，也就是说，<strong>Java中所有的线程都执行完毕后，守护线程自动结束</strong>，因此守护线程不适合进行IO操作，只适合打打杂。</li>\n</ul>\n<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">{</span>\n    <span class="token class-name">Thread</span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">try</span> <span class="token punctuation">{</span>\n                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"程序正常运行中..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    t<span class="token punctuation">.</span><span class="token function">setDaemon</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//设置为守护线程（必须在开始之前，中途是不允许转换的）</span>\n    t<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',r:{minutes:3.62,words:1085},y:"a",t:"Java - 多线程与反射",O:-.79}}],["/code/java/java%203.html",{loader:()=>n.e(5433).then(n.bind(n,5563)),meta:{d:1728864e6,l:"2024年10月14日",c:["code"],g:["java"],e:"<h2>封装 继承和多态</h2>\n<p>封装、继承和多态是面向对象编程的三大特性。</p>\n<p>封装，把对象的属性和方法结合成一个独立的整体，隐藏实现细节，并提供对外访问的接口。</p>\n<p>继承，从已知的一个类中派生出一个新的类，叫子类。子类实现了父类所有非私有化的属性和方法，并根据实际需求扩展出新的行为。</p>\n<p>多态，多个不同的对象对同一消息作出响应，同一消息根据不同的对象而采用各种不同的方法。</p>\n<p>正是这三大特性，让我们的Java程序更加生动形象。</p>\n<h3>封装</h3>\n<h3>继承</h3>\n<p>父类是 super 子类是 this</p>\n<h4>Object 类</h4>",r:{minutes:12.32,words:3695},y:"a",t:"Java - 类与对象3",O:-.98}}],["/code/java/java%204.html",{loader:()=>n.e(8216).then(n.bind(n,2511)),meta:{d:17295552e5,l:"2024年10月22日",c:["code"],g:["java"],e:'<h2>面向对象高级篇1</h2>\n<h3>基本类型包装类</h3>\n<p>Java并不是纯面向对象的语言，虽然Java语言是一个面向对象的语言，但是Java中的基本数据类型却不是面向对象的。Java中的基本类型，如果想通过对象的形式去使用他们，Java提供的基本类型包装类，使得Java能够更好的体现面向对象的思想，同时也使得基本类型能够支持对象操作！</p>\n<h4>所有包装类如下</h4>\n<figure><img src="http://myimg.ekkosonya.cn/20241017002218.png" alt="20241017002218" tabindex="0" loading="lazy"><figcaption>20241017002218</figcaption></figure>',r:{minutes:3.84,words:1153},y:"a",t:"Java - 类与对象4",O:-.97}}],["/code/java/java%205.html",{loader:()=>n.e(6479).then(n.bind(n,3888)),meta:{d:1729728e6,l:"2024年10月24日",c:["code"],g:["java"],e:'<h2>面向对象高级篇 2</h2>\n<h3>数组</h3>\n<p>数组是相同类型数据的有序集合，数组可以代表任何相同类型的一组内容（包括引用类型和基本类型）其中存放的每一个数据称为数组的一个元素。</p>\n<h4>定义</h4>\n<p>数组类型比较特殊，<strong>它本身也是类，但是编程不可见</strong>（底层C++写的，在运行时动态创建）<br>\n即使是基本类型的数组，也是以对象的形式存在的，并不是基本数据类型。所以，我们要创建一个数组，同样需要使用 <code>new</code> 关键字</p>\n<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment">//类型[]就表示这个是一个数组类型</span>\n    <span class="token class-name">Object</span> obj <span class="token operator">=</span> array<span class="token punctuation">;</span>   <span class="token comment">//因为同样是类，肯定是继承自Object的，所以说可以直接向上转型</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',r:{minutes:9.76,words:2929},y:"a",t:"Java - 数组 | 字符串 | 正则表达式",O:-.96}}],["/code/java/java%206.html",{loader:()=>n.e(3494).then(n.bind(n,7848)),meta:{d:17299008e5,l:"2024年10月26日",c:["code"],g:["java"],e:'\n<p>静态 属于 类， 成员 属于 对象。</p>\n<h2>内部类</h2>\n<p>内部类顾名思义，就是创建在内部的类。</p>\n<h3>成员内部类 (属于 对象)</h3>\n<p>成员内部类其实在某些情况下使用起来比较麻烦，对于这种成员内部类，我们一般只会在类的内部自己使用</p>\n<p>成员内部类和成员方法、成员变量一样，<strong>是对象所有的</strong>，而<strong>不是类所有的</strong>，\n如果我们要使用成员内部类，那么就需要创造一个对象，才能去 <code>new</code> 一个成员内部类。</p>\n<ul>\n<li>\n<p>我们可以直接在类的内部定义成员内部类：</p>\n<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Inner</span> <span class="token punctuation">{</span>   \n      <span class="token comment">//内部类也是类，所以说里面也可以有成员变量、方法等，甚至还可以继续套娃一个成员内部类</span>\n        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"我是成员内部类！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token class-name">Test</span> test <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//我们首先需要创建对象</span>\n    <span class="token class-name">Test<span class="token punctuation">.</span>Inner</span> inner <span class="token operator">=</span> test<span class="token punctuation">.</span><span class="token keyword">new</span> <span class="token class-name">Inner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//成员内部类的类型名称就是 外层.内部类名称</span>\n    inner<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>注意，成员内部类也可以使用访问权限控制，如果我们我们将其权限改为private，那么就像我们把成员变量访问权限变成私有一样，外部是无法访问到这个内部类的.</p>\n</li>\n<li>\n<p>这里我们需要特别注意一下，在成员内部类中，是<strong>可以访问到外层的变量的</strong></p>\n<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>\n    \n    <span class="token keyword">public</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Inner</span> <span class="token punctuation">{</span>\n        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"我是成员内部类："</span><span class="token operator">+</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token comment">//成员内部类可以访问到外部的成员变量</span>\n            <span class="token comment">//因为成员内部类本身就是某个对象所有的，每个对象都有这样的一个类定义，这里的name是其所依附对象的</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div></li>\n<li>\n<p>每个类可以创建一个对象，<strong>每个对象中都有一个单独的类定义</strong>，可以通过这个成员内部类又创建出更多对象，套娃了属于是。</p>\n<figure><img src="http://myimg.ekkosonya.cn/20241027012950.png" alt="20241027012950" tabindex="0" loading="lazy"><figcaption>20241027012950</figcaption></figure>\n<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token class-name">Test</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token string">"小明"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">Test<span class="token punctuation">.</span>Inner</span> inner1 <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token keyword">new</span> <span class="token class-name">Inner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//依附于a创建的对象，那么就是a的</span>\n    inner1<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token class-name">Test</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token string">"小红"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">Test<span class="token punctuation">.</span>Inner</span> inner2 <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token keyword">new</span> <span class="token class-name">Inner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//依附于b创建的对象，那么就是b的</span>\n    inner2<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div></li>\n<li>\n<p>那么如果内部类中也定义了同名的变量，此时我们怎么去明确要使用的是哪一个 (<strong>就近原则</strong>)\n如果需要指定为外部的对象，那么需要<strong>在前面添加外部类型名称</strong> <code>Test.this.</code></p>\n<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>\n  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>\n\n  <span class="token keyword">public</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Inner</span> <span class="token punctuation">{</span>\n\n      <span class="token class-name">String</span> name<span class="token punctuation">;</span>\n      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">{</span>\n          <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"方法参数的name = "</span><span class="token operator">+</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    \n          <span class="token comment">//依然是就近原则，最近的是参数，那就是参数了</span>\n          <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"成员内部类的name = "</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>   \n          <span class="token comment">//在内部类中使用this关键字，只能表示内部类对象</span>\n          <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"成员内部类的name = "</span><span class="token operator">+</span><span class="token class-name">Test</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token comment">//如果需要指定为外部的对象，那么需要在前面添加外部类型名称</span>\n      <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n</code></pre></div><p>包括对方法的调用和super关键字的使用，也是一样的：</p>\n<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Inner</span> <span class="token punctuation">{</span>\n    <span class="token class-name">String</span> name<span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//内部类自己的toString方法</span>\n        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//内部类父类的toString方法</span>\n        <span class="token class-name">Test</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//外部类的toSrting方法</span>\n        <span class="token class-name">Test</span><span class="token punctuation">.</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//外部类父类的toString方法</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div></li>\n</ul>',r:{minutes:10.41,words:3122},y:"a",t:"Java - 内部类",O:-.95}}],["/code/java/java%207.html",{loader:()=>n.e(3645).then(n.bind(n,968)),meta:{d:17300736e5,l:"2024年10月28日",c:["code"],g:["java"],e:'<h2>面向对象高级篇 4</h2>\n<h3>异常机制</h3>\n<h4>异常类型</h4>\n<p>我们在之前其实已经接触过一些异常了，比如数组越界异常，空指针异常，算术异常等.<br>\n他们其实都是异常类型，我们的每一个异常也是一个类，他们都继承自 <strong>Exception</strong> 类</p>\n<ul>\n<li>\n<p><strong>运行时异常</strong>  继承自 <strong>RuntimeException</strong>\n在编译阶段无法感知代码是否会出现问题，只有在运行的时候才知道会不会出错（正常情况下是不会出错的），这样的异常称为运行时异常。<br>\n所有的运行时异常都继承自 <strong>RuntimeException</strong>\n<strong>RuntimeException</strong> 是继承 <strong>Exception</strong></p>\n</li>\n<li>\n<p><strong>编译时异常</strong>  继承 <strong>Exception</strong>\n编译时异常明确指出可能会出现的异常，在编译阶段就需要进行处理（捕获异常）必须要考虑到出现异常的情况，如果不进行处理，将<strong>无法通过编译</strong>！<br>\n默认继承自 <strong>Exception</strong> 类的异常都是编译时异常。<br>\n比如Object类中定义的clone方法，就明确指出了在运行的时候会出现的异常。</p>\n<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">native</span> <span class="token class-name">Object</span> <span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">CloneNotSupportedException</span><span class="token punctuation">;</span>\n</code></pre></div><figure><img src="http://myimg.ekkosonya.cn/20241029001425.png" alt="20241029001425" tabindex="0" loading="lazy"><figcaption>20241029001425</figcaption></figure>\n</li>\n<li>\n<p><strong>错误 Error</strong>\n<strong>错误比异常更严重</strong>，异常就是不同寻常，但不一定会导致致命的问题，而错误是致命问题，一般出现错误可能JVM就无法继续正常运行了。<br>\n比如 OutOfMemoryError 就是内存溢出错误（内存占用已经超出限制，无法继续申请内存了）</p>\n</li>\n</ul>',r:{minutes:6.35,words:1906},y:"a",t:"Java - 异常",O:-.94}}],["/code/java/java%208.html",{loader:()=>n.e(4940).then(n.bind(n,9997)),meta:{d:173016e7,l:"2024年10月29日",c:["code"],g:["java"],e:'<h2>面向对象高级篇 6</h2>\n<p>工具类就是专门为一些特定场景编写的，便于我们去使用的类，工具类一般都会内置大量的静态方法，<strong>我们可以通过类名直接使用</strong>。</p>\n<h3>常用工具类</h3>\n<h4>数学工具类  <code>Math</code></h4>\n<p><code>Math</code>类 是在 <code>java.util</code> 中，因此可以直接调用。</p>\n<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">//Math也是java.lang包下的类，所以说默认就可以直接使用</span>\n  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//我们可以使用pow方法直接计算a的b次方</span>\n\n  <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//abs方法可以求绝对值</span>\n  <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//快速取最大值</span>\n  <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//快速取最小值</span>\n  <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//求一个数的算术平方根</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',r:{minutes:1.16,words:349},y:"a",t:"Java - 工具类",O:-.93}}],["/code/java/java%209.html",{loader:()=>n.e(4947).then(n.bind(n,9363)),meta:{d:17308512e5,l:"2024年11月6日",c:["code"],g:["java"],e:"<h2>泛型 1</h2>\n<h3>使用泛型的原因</h3>\n<p>为了统计学生成绩，要求设计一个Score对象，包括课程名称、课程号、课程成绩，但是成绩分为两种，一种是以<code>优秀、良好、合格</code> 来作为结果，还有一种就是 <code>60.0、75.5、92.5</code> 这样的数字分数，可能高等数学这门课是以数字成绩进行结算，而计算机网络实验这门课是以等级进行结算，这两种分数类型都有可能出现，那么现在该如何去设计这样的一个 Score 类呢？</p>\n<p>现在的问题就是，成绩可能是<code>String</code>类型，也可能是<code>Integer</code>类型，如何才能很好的去存可能出现的两种类型呢？</p>",r:{minutes:5.39,words:1618},y:"a",t:"Java - 泛型 1",O:-.92}}],["/404.html",{loader:()=>n.e(7490).then(n.bind(n,2095)),meta:{y:"p",t:""}}],["/daily/",{loader:()=>n.e(4470).then(n.bind(n,3142)),meta:{y:"p",t:"Daily"}}],["/academic/UAV/",{loader:()=>n.e(4470).then(n.bind(n,4713)),meta:{y:"p",t:"UAV"}}],["/academic/",{loader:()=>n.e(4470).then(n.bind(n,2510)),meta:{y:"p",t:"Academic"}}],["/academic/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/",{loader:()=>n.e(4470).then(n.bind(n,2678)),meta:{y:"p",t:"强化学习"}}],["/code/java/",{loader:()=>n.e(4470).then(n.bind(n,9821)),meta:{y:"p",t:"Java"}}],["/code/",{loader:()=>n.e(4470).then(n.bind(n,9005)),meta:{y:"p",t:"Code"}}],["/category/",{loader:()=>n.e(4470).then(n.bind(n,9947)),meta:{y:"p",t:"分类",I:!1}}],["/category/daily/",{loader:()=>n.e(4470).then(n.bind(n,5729)),meta:{y:"p",t:"daily 分类",I:!1}}],["/category/academic/",{loader:()=>n.e(4470).then(n.bind(n,2608)),meta:{y:"p",t:"academic 分类",I:!1}}],["/category/code/",{loader:()=>n.e(4470).then(n.bind(n,3795)),meta:{y:"p",t:"code 分类",I:!1}}],["/tag/",{loader:()=>n.e(4470).then(n.bind(n,7479)),meta:{y:"p",t:"标签",I:!1}}],["/tag/d1/",{loader:()=>n.e(4470).then(n.bind(n,4479)),meta:{y:"p",t:"标签: d1",I:!1}}],["/tag/uav/",{loader:()=>n.e(4470).then(n.bind(n,7179)),meta:{y:"p",t:"标签: UAV",I:!1}}],["/tag/ieee-transactions-on-vehicular-technology/",{loader:()=>n.e(4470).then(n.bind(n,3158)),meta:{y:"p",t:"标签: IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY",I:!1}}],["/tag/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/",{loader:()=>n.e(4470).then(n.bind(n,6807)),meta:{y:"p",t:"标签: 强化学习",I:!1}}],["/tag/java/",{loader:()=>n.e(4470).then(n.bind(n,9509)),meta:{y:"p",t:"标签: java",I:!1}}],["/article/",{loader:()=>n.e(4470).then(n.bind(n,662)),meta:{y:"p",t:"文章",I:!1}}],["/star/",{loader:()=>n.e(4470).then(n.bind(n,4405)),meta:{y:"p",t:"星标",I:!1}}],["/timeline/",{loader:()=>n.e(4470).then(n.bind(n,4124)),meta:{y:"p",t:"时间轴",I:!1}}]])},9354:(s,a,n)=>{n.d(a,{U:()=>t});const t=JSON.parse('{"base":"/","lang":"zh-CN","title":"EkkoSonya\'s Blog","description":"笔记记录","head":[["link",{"rel":"alternate","type":"application/rss+xml","href":"http://ekkosonya.cn/rss.xml","title":"EkkoSonya\'s Blog RSS Feed"}]],"locales":{}}')},8120:(s,a,n)=>{n.d(a,{K:()=>t});const t=JSON.parse('{"encrypt":{},"author":{"name":"EkkoSonya","url":"http://ekkosonya.cn"},"logo":"/penguin1.png","breadcrumb":false,"contributors":false,"lastUpdated":true,"editLink":false,"darkmode":"switch","fullscreen":true,"repo":"EkkoSonya","repoLabel":"GitHub","repoDisplay":true,"docsDir":"docs","navbarLayout":{"start":["Brand"],"center":["Links"],"end":["SocialLink","Repo","Outlook","Search"]},"copyright":"Copyright © 2024-present <a href=\\"http://ekkosonya.cn/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">EkkoSonya\'s Blog</a>","displayFooter":true,"footer":"<img src=\\"/beian.png\\" style=\\"width:1.2rem;margin-right:2px;\\"> <a href=\\"https://beian.mps.gov.cn/#/query/webSearch?code=33019202000049\\" rel=\\"noopener noreferrer\\" target=\\"_blank\\">浙公网安备33019202000049</a>","pageInfo":["Category","Tag","Word","ReadingTime","PageView"],"blog":{"articleInfo":["Date","PageView","Category","Tag","ReadingTime"],"name":"EkkoSonya","avatar":"/penguin2.png","description":"好好学习，天天向上","roundAvatar":true,"medias":{"GitHub":"https://github.com/EkkoSonya","Email":"mailto:ekkosonya@163.com"}},"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家","openInNewWindow":"Open in new window"},"navbar":[{"text":"主页","link":""},{"text":"学术","prefix":"/academic/","link":"/academic/"},{"text":"代码","prefix":"/code/","link":"/code/"},{"text":"随笔","prefix":"/daily/","link":"/daily/"},{"text":"工具","icon":"tool","children":[{"text":"ChatGPT SC","icon":"creative","link":"https://www.aishort.top/"},{"text":"IMGPrompt","icon":"pic","link":"https://prompt.newzone.top/"},{"text":"多语言处理","icon":"others","link":"https://tools.newzone.top/json-translate"},{"text":"工具收藏","icon":"categoryselected","link":"https://nav.newzone.top/"}]}],"sidebar":{"":[{"text":"学术","prefix":"/academic/","collapsible":true,"children":"structure"},{"text":"代码","prefix":"/code/","collapsible":true,"children":"structure"},{"text":"随笔","prefix":"/daily/","collapsible":true,"children":"structure"}]}}}}')},1878:(s,a,n)=>{n.d(a,{v:()=>t});const t={"/academic/":[{text:"UAV",prefix:"UAV/",collapsible:!0,children:["Reinforcement-Learning-in-Multiple-UAV-Networks_Deployment-and-Movement-Design"]},{text:"强化学习",prefix:"强化学习/",collapsible:!0,children:["chapter 1","chapter 2","chapter 3","chapter 4","chapter 5","chapter 6","chapter 7","chapter 8","chapter 9","chapter 10"]}],"/code/":[{text:"Java",prefix:"java/",collapsible:!0,children:["java 1","java 2","java 3","java 4","java 5","java 6","java 7","java 8","java 9","java 10","java 11","java 12","java 13","java 14","java 15","java 16","java 17","java 18","java 19","java 20","java 21","java 22","java 23","java 24"]}],"/daily/":["d1"]}},8047:(s,a,n)=>{n.d(a,{P:()=>t});const t={GitHub:'<svg xmlns="http://www.w3.org/2000/svg" class="icon github-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#171515"/><path fill="#fff" d="M509.423 146.442c-200.317 0-362.756 162.42-362.756 362.8 0 160.266 103.936 296.24 248.109 344.217 18.139 3.327 24.76-7.872 24.76-17.486 0-8.613-.313-31.427-.49-61.702-100.912 21.923-122.205-48.63-122.205-48.63-16.495-41.91-40.28-53.067-40.28-53.067-32.937-22.51 2.492-22.053 2.492-22.053 36.407 2.566 55.568 37.386 55.568 37.386 32.362 55.438 84.907 39.43 105.58 30.143 3.296-23.444 12.667-39.43 23.032-48.498-80.557-9.156-165.246-40.28-165.246-179.297 0-39.604 14.135-71.988 37.342-97.348-3.731-9.178-16.18-46.063 3.556-96.009 0 0 30.46-9.754 99.76 37.19 28.937-8.048 59.97-12.071 90.823-12.211 30.807.14 61.843 4.165 90.822 12.21 69.26-46.944 99.663-37.189 99.663-37.189 19.792 49.946 7.34 86.831 3.61 96.01 23.25 25.359 37.29 57.742 37.29 97.347 0 139.366-84.82 170.033-165.637 179.013 13.026 11.2 24.628 33.342 24.628 67.182 0 48.498-.445 87.627-.445 99.521 0 9.702 6.535 20.988 24.945 17.444 144.03-48.067 247.881-183.95 247.881-344.175 0-200.378-162.442-362.798-362.802-362.798z"/></svg>',Email:'<svg xmlns="http://www.w3.org/2000/svg" class="icon email-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#1384FF"/><path fill="#fff" d="M270.077 286.233H751.99c32.933 0 59.86 24.855 60.274 55.51l-301.023 157L210.217 341.88c.207-30.723 26.927-55.717 59.86-55.717zm-59.929 115.714-.276 277.756c0 30.931 27.134 56.2 60.205 56.2H751.99c33.14 0 60.274-25.269 60.274-56.2V401.81L518.283 551.492a15.88 15.88 0 0 1-14.43 0L210.148 401.947z"/></svg>'}}},s=>{s.O(0,[1410,731],(()=>(1392,s(s.s=1392)))),s.O()}]);