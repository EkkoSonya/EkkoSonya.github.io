"use strict";(self.webpackChunklearn_data=self.webpackChunklearn_data||[]).push([[7085],{83671:(n,a)=>{a.A=(n,a)=>{const s=n.__vccOpts||n;for(const[n,e]of a)s[n]=e;return s}},80612:(n,a,s)=>{s.r(a),s.d(a,{comp:()=>y,data:()=>f});var e=s(7847);const t=s.p+"assets/img/2.d95d4aa4.png",i=s.p+"assets/img/3.bd60b429.png",p=s.p+"assets/img/1.f96f1209.png",l=s.p+"assets/img/4.24a348e7.png",o=s.p+"assets/img/6.fe26854d.png",r=s.p+"assets/img/7.41450918.png",c=s.p+"assets/img/8.74c8be41.png",d=s.p+"assets/img/5.cc527826.png",u=(0,e.Fv)('<h2 id="苍穹外卖" tabindex="-1"><a class="header-anchor" href="#苍穹外卖"><span>苍穹外卖</span></a></h2><h3 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h3><h4 id="功能架构" tabindex="-1"><a class="header-anchor" href="#功能架构"><span>功能架构</span></a></h4><figure><img src="'+t+'" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><h5 id="管理端功能" tabindex="-1"><a class="header-anchor" href="#管理端功能"><span>管理端功能</span></a></h5><p>员工登录/退出 , 员工信息管理 , 分类管理 , 菜品管理 , 套餐管理 , 菜品口味管理 , 订单管理 ，数据统计，来单提醒。</p><h5 id="用户端功能" tabindex="-1"><a class="header-anchor" href="#用户端功能"><span>用户端功能</span></a></h5><p>微信登录 , 收件人地址管理 , 用户历史订单查询 , 菜品规格查询 , 购物车功能 , 下单 , 支付、分类及菜品浏览。</p><h4 id="整体结构" tabindex="-1"><a class="header-anchor" href="#整体结构"><span>整体结构</span></a></h4><figure><img src="'+i+'" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><h4 id="技术选型" tabindex="-1"><a class="header-anchor" href="#技术选型"><span>技术选型</span></a></h4><figure><img src="'+p+'" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><p>(1). 用户层 本项目中在构建系统管理后台的前端页面，我们会用到H5、Vue.js、ElementUI、apache echarts(展示图表)等技术。而在构建移动端应用时，我们会使用到微信小程序。</p><p>(2). 网关层 Nginx是一个服务器，主要用来作为Http服务器，部署静态资源，访问性能高。在Nginx中还有两个比较重要的作用： 反向代理和负载均衡， 在进行项目部署时，要实现Tomcat的负载均衡，就可以通过Nginx来实现。</p><p>(3). 应用层 SpringBoot： 快速构建Spring项目, 采用 &quot;约定优于配置&quot; 的思想, 简化Spring项目的配置开发。 SpringMVC：SpringMVC是spring框架的一个模块，springmvc和spring无需通过中间整合层进行整合，可以无缝集成。 Spring Task: 由Spring提供的定时任务框架。 httpclient: 主要实现了对http请求的发送。 Spring Cache: 由Spring提供的数据缓存框架 JWT: 用于对应用程序上的用户进行身份验证的标记。 阿里云OSS: 对象存储服务，在项目中主要存储文件，如图片等。 Swagger： 可以自动的帮助开发人员生成接口文档，并对接口进行测试。 POI: 封装了对Excel表格的常用操作。 WebSocket: 一种通信网络协议，使客户端和服务器之间的数据交换更加简单，用于项目的来单、催单功能实现。</p><p>(4). 数据层 MySQL： 关系型数据库, 本项目的核心业务数据都会采用MySQL进行存储。 Redis： 基于key-value格式存储的内存数据库, 访问速度快, 经常使用它做缓存。 Mybatis： 本项目持久层将会使用Mybatis开发。 pagehelper: 分页插件。 spring data redis: 简化java代码操作Redis的API。</p><p>(5). 工具 git: 版本控制工具, 在团队协作中, 使用该工具对项目中的代码进行管理。 maven: 项目构建工具。 junit：单元测试工具，开发人员功能实现完毕后，需要通过junit对功能进行单元测试。 postman: 接口测工具，模拟用户发起的各类HTTP请求，获取对应的响应结果。</p><h3 id="后端搭建" tabindex="-1"><a class="header-anchor" href="#后端搭建"><span>后端搭建</span></a></h3><h4 id="碰到问题" tabindex="-1"><a class="header-anchor" href="#碰到问题"><span>碰到问题</span></a></h4><p>找不到符号 (更该jdk版本23——&gt;17)</p><p>配置属性类</p><h4 id="项目结构" tabindex="-1"><a class="header-anchor" href="#项目结构"><span>项目结构</span></a></h4><p>基于maven进行项目构建，进行分模块开发</p><figure><img src="'+l+'" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><h5 id="sky-common" tabindex="-1"><a class="header-anchor" href="#sky-common"><span>sky-common</span></a></h5><figure><img src="'+o+'" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><h5 id="sky-pojo" tabindex="-1"><a class="header-anchor" href="#sky-pojo"><span>sky-pojo</span></a></h5><figure><img src="'+r+'" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><h5 id="sky-server" tabindex="-1"><a class="header-anchor" href="#sky-server"><span>sky-server</span></a></h5><figure><img src="'+c+'" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><h4 id="nginx反向代理和负载均衡" tabindex="-1"><a class="header-anchor" href="#nginx反向代理和负载均衡"><span>nginx反向代理和负载均衡</span></a></h4><figure><img src="'+d+'" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><h5 id="_1-nginx反向代理" tabindex="-1"><a class="header-anchor" href="#_1-nginx反向代理"><span>1. nginx反向代理</span></a></h5><p>这种就是通过nginx来反向代理，将前端发送的动态请求由 nginx 转发到后端服务器，从而避免跨域等问题</p><p><strong>nginx 反向代理的好处：</strong></p><ul><li><p>提高访问速度</p><p>因为nginx本身可以进行缓存，如果访问的同一接口，并且做了数据缓存，nginx就直接可把数据返回，不需要真正地访问服务端，从而提高访问速度。</p></li><li><p>进行负载均衡</p><p>所谓负载均衡,就是把大量的请求按照我们指定的方式均衡的分配给集群中的每台服务器。</p></li><li><p>保证后端服务安全</p><p>因为一般后台服务地址不会暴露，所以使用浏览器不能直接访问，可以把nginx作为请求访问的入口，请求到达nginx后转发到具体的服务中，从而保证后端服务的安全。</p></li></ul><p><strong>nginx 反向代理的配置方式：</strong></p><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">server</span></span><span class="token punctuation">{</span>\n    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">80</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">server_name</span> localhost</span><span class="token punctuation">;</span>\n    \n    <span class="token directive"><span class="token keyword">location</span> /api/</span><span class="token punctuation">{</span>\n        <span class="token directive"><span class="token keyword">proxy_pass</span> http://localhost:8080/admin/</span><span class="token punctuation">;</span> <span class="token comment">#反向代理</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>proxy_pass</strong>: 该指令是用来设置代理服务器的地址，可以是主机名称，IP地址加端口号等形式。</p>',39),g={href:"http://localhost:80/api/../..",target:"_blank",rel:"noopener noreferrer"},k={href:"http://localhost:8080/admin/",target:"_blank",rel:"noopener noreferrer"},m=(0,e.Fv)('<h5 id="_2-负载均衡" tabindex="-1"><a class="header-anchor" href="#_2-负载均衡"><span>2. 负载均衡</span></a></h5><p>当如果服务以集群的方式进行部署时，那nginx在转发请求到服务器时就需要做相应的负载均衡。其实，负载均衡从本质上来说也是基于反向代理来实现的，最终都是转发请求。</p><p><strong>nginx 负载均衡的配置方式：</strong></p><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">upstream</span> webservers</span><span class="token punctuation">{</span>\n    <span class="token directive"><span class="token keyword">server</span> 192.168.100.128:8080</span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">server</span> 192.168.100.129:8080</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token directive"><span class="token keyword">server</span></span><span class="token punctuation">{</span>\n    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">80</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">server_name</span> localhost</span><span class="token punctuation">;</span>\n    \n    <span class="token directive"><span class="token keyword">location</span> /api/</span><span class="token punctuation">{</span>\n        <span class="token directive"><span class="token keyword">proxy_pass</span> http://webservers/admin</span><span class="token punctuation">;</span><span class="token comment">#负载均衡</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>upstream</strong>: 如果代理服务器是一组服务器的话，我们可以使用upstream指令配置后端服务器组。</p>',5),h={href:"http://localhost:80/api/../..",target:"_blank",rel:"noopener noreferrer"},v={href:"http://webservers/admin",target:"_blank",rel:"noopener noreferrer"},b=(0,e.Fv)('<p>**注：**upstream后面的名称可自定义，但要上下保持一致。</p><p><strong>nginx 负载均衡策略：</strong></p><table><thead><tr><th><strong>名称</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>轮询</td><td>默认方式</td></tr><tr><td>weight</td><td>权重方式，默认为1，权重越高，被分配的客户端请求就越多</td></tr><tr><td>ip_hash</td><td>依据ip分配方式，这样每个访客可以固定访问一个后端服务</td></tr><tr><td>least_conn</td><td>依据最少连接方式，把请求优先分配给连接数少的后端服务</td></tr><tr><td>url_hash</td><td>依据url分配方式，这样相同的url会被分配到同一个后端服务</td></tr><tr><td>fair</td><td>依据响应时间方式，响应时间短的服务将会被优先分配</td></tr></tbody></table><h3 id="完善登录功能" tabindex="-1"><a class="header-anchor" href="#完善登录功能"><span>完善登录功能</span></a></h3><p><strong>问题</strong>：员工表中的密码是明文存储，安全性太低</p><p><strong>解决思路：</strong></p><ol><li>将密码加密后存储，提高安全性</li><li>使用MD5加密方式对明文密码加密</li></ol><p><strong>实现步骤：</strong></p><ol><li><p>修改数据库中明文密码，改为MD5加密后的密文</p></li><li><p>修改Java代码，前端提交的密码进行MD5加密后再跟数据库中密码比对</p><p>打开EmployeeServiceImpl.java，修改比对密码</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/**\n     * 员工登录\n     *\n     * <span class="token keyword">@param</span> <span class="token parameter">employeeLoginDTO</span>\n     * <span class="token keyword">@return</span>\n     */</span>\n    <span class="token keyword">public</span> <span class="token class-name">Employee</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token class-name">EmployeeLoginDTO</span> employeeLoginDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">//1、根据用户名查询数据库中的数据</span>\n       \n        <span class="token comment">//2、处理各种异常情况（用户名不存在、密码不对、账号被锁定）</span>\n        <span class="token comment">//.......</span>\n        <span class="token comment">//密码比对</span>\n        <span class="token comment">// TODO 后期需要进行md5加密，然后再进行比对</span>\n        password <span class="token operator">=</span> <span class="token class-name">DigestUtils</span><span class="token punctuation">.</span><span class="token function">md5DigestAsHex</span><span class="token punctuation">(</span>password<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>password<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">//密码错误</span>\n            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">PasswordErrorException</span><span class="token punctuation">(</span><span class="token class-name">MessageConstant</span><span class="token punctuation">.</span><span class="token constant">PASSWORD_ERROR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">//........</span>\n\n        <span class="token comment">//3、返回实体对象</span>\n        <span class="token keyword">return</span> employee<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>',9),x={},y=(0,s(83671).A)(x,[["render",function(n,a){const s=(0,e.g2)("ExternalLinkIcon");return(0,e.uX)(),(0,e.CE)("div",null,[u,(0,e.Lk)("p",null,[(0,e.eW)("如上代码的含义是：监听80端口号， 然后当我们访问 "),(0,e.Lk)("a",g,[(0,e.eW)("http://localhost:80/api/../.."),(0,e.bF)(s)]),(0,e.eW)(" 这样的接口的时候，它会通过 location /api/ {} 这样的反向代理到 "),(0,e.Lk)("a",k,[(0,e.eW)("http://localhost:8080/admin/"),(0,e.bF)(s)]),(0,e.eW)(" 上来。")]),m,(0,e.Lk)("p",null,[(0,e.eW)("如上代码的含义是：监听80端口号， 然后当我们访问 "),(0,e.Lk)("a",h,[(0,e.eW)("http://localhost:80/api/../.."),(0,e.bF)(s)]),(0,e.eW)(" 这样的接口的时候，它会通过 location /api/ {} 这样的反向代理到 "),(0,e.Lk)("a",v,[(0,e.eW)("http://webservers/admin"),(0,e.bF)(s)]),(0,e.eW)("，根据webservers名称找到一组服务器，根据设置的负载均衡策略(默认是轮询)转发到具体的服务器。")]),b])}]]),f=JSON.parse('{"path":"/code/java_item/1-%E8%8B%8D%E7%A9%B9%E5%A4%96%E5%8D%96/article1.html","title":"Javassm - item1-1 (项目介绍+环境搭建)","lang":"zh-CN","frontmatter":{"title":"Javassm - item1-1 (项目介绍+环境搭建)","date":"2025-10-17T00:00:00.000Z","category":["code"],"tag":["java_item"],"order":-0.6,"description":"苍穹外卖 介绍 功能架构 alt textalt text 管理端功能 员工登录/退出 , 员工信息管理 , 分类管理 , 菜品管理 , 套餐管理 , 菜品口味管理 , 订单管理 ，数据统计，来单提醒。 用户端功能 微信登录 , 收件人地址管理 , 用户历史订单查询 , 菜品规格查询 , 购物车功能 , 下单 , 支付、分类及菜品浏览。 整体结构 al...","head":[["meta",{"property":"og:url","content":"http://ekkosonya.cn/code/java_item/1-%E8%8B%8D%E7%A9%B9%E5%A4%96%E5%8D%96/article1.html"}],["meta",{"property":"og:site_name","content":"EkkoSonya\'s Blog"}],["meta",{"property":"og:title","content":"Javassm - item1-1 (项目介绍+环境搭建)"}],["meta",{"property":"og:description","content":"苍穹外卖 介绍 功能架构 alt textalt text 管理端功能 员工登录/退出 , 员工信息管理 , 分类管理 , 菜品管理 , 套餐管理 , 菜品口味管理 , 订单管理 ，数据统计，来单提醒。 用户端功能 微信登录 , 收件人地址管理 , 用户历史订单查询 , 菜品规格查询 , 购物车功能 , 下单 , 支付、分类及菜品浏览。 整体结构 al..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-16T17:59:51.000Z"}],["meta",{"property":"article:author","content":"EkkoSonya"}],["meta",{"property":"article:tag","content":"java_item"}],["meta",{"property":"article:published_time","content":"2025-10-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-16T17:59:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Javassm - item1-1 (项目介绍+环境搭建)\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-10-17T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-16T17:59:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"EkkoSonya\\",\\"url\\":\\"http://ekkosonya.cn\\"}]}"]]},"headers":[{"level":2,"title":"苍穹外卖","slug":"苍穹外卖","link":"#苍穹外卖","children":[{"level":3,"title":"介绍","slug":"介绍","link":"#介绍","children":[{"level":4,"title":"功能架构","slug":"功能架构","link":"#功能架构","children":[{"level":5,"title":"管理端功能","slug":"管理端功能","link":"#管理端功能","children":[]},{"level":5,"title":"用户端功能","slug":"用户端功能","link":"#用户端功能","children":[]}]},{"level":4,"title":"整体结构","slug":"整体结构","link":"#整体结构","children":[]},{"level":4,"title":"技术选型","slug":"技术选型","link":"#技术选型","children":[]}]},{"level":3,"title":"后端搭建","slug":"后端搭建","link":"#后端搭建","children":[{"level":4,"title":"碰到问题","slug":"碰到问题","link":"#碰到问题","children":[]},{"level":4,"title":"项目结构","slug":"项目结构","link":"#项目结构","children":[{"level":5,"title":"sky-common","slug":"sky-common","link":"#sky-common","children":[]},{"level":5,"title":"sky-pojo","slug":"sky-pojo","link":"#sky-pojo","children":[]},{"level":5,"title":"sky-server","slug":"sky-server","link":"#sky-server","children":[]}]},{"level":4,"title":"nginx反向代理和负载均衡","slug":"nginx反向代理和负载均衡","link":"#nginx反向代理和负载均衡","children":[{"level":5,"title":"1. nginx反向代理","slug":"_1-nginx反向代理","link":"#_1-nginx反向代理","children":[]},{"level":5,"title":"2. 负载均衡","slug":"_2-负载均衡","link":"#_2-负载均衡","children":[]}]}]},{"level":3,"title":"完善登录功能","slug":"完善登录功能","link":"#完善登录功能","children":[]}]}],"git":{"createdTime":1760637591000,"updatedTime":1760637591000,"contributors":[{"name":"EkkoSonya","email":"ekkosonya@163.com","commits":1}]},"readingTime":{"minutes":5.82,"words":1747},"filePathRelative":"code/java_item/1-苍穹外卖/article1.md","localizedDate":"2025年10月17日","excerpt":"<h2>苍穹外卖</h2>\\n<h3>介绍</h3>\\n<h4>功能架构</h4>\\n<figure><figcaption>alt text</figcaption></figure>\\n<h5>管理端功能</h5>\\n<p>员工登录/退出 , 员工信息管理 , 分类管理 , 菜品管理 , 套餐管理 , 菜品口味管理 , 订单管理 ，数据统计，来单提醒。</p>\\n<h5>用户端功能</h5>\\n<p>微信登录 , 收件人地址管理 , 用户历史订单查询 , 菜品规格查询 , 购物车功能 , 下单 , 支付、分类及菜品浏览。</p>\\n<h4>整体结构</h4>\\n<figure><figcaption>alt text</figcaption></figure>","autoDesc":true}')}}]);